// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plan.proto

package planpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	schemapb "github.com/milvus-io/milvus/internal/proto/schemapb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RangeExpr_OpType int32

const (
	RangeExpr_Invalid      RangeExpr_OpType = 0
	RangeExpr_GreaterThan  RangeExpr_OpType = 1
	RangeExpr_GreaterEqual RangeExpr_OpType = 2
	RangeExpr_LessThan     RangeExpr_OpType = 3
	RangeExpr_LessEqual    RangeExpr_OpType = 4
	RangeExpr_Equal        RangeExpr_OpType = 5
	RangeExpr_NotEqual     RangeExpr_OpType = 6
)

var RangeExpr_OpType_name = map[int32]string{
	0: "Invalid",
	1: "GreaterThan",
	2: "GreaterEqual",
	3: "LessThan",
	4: "LessEqual",
	5: "Equal",
	6: "NotEqual",
}

var RangeExpr_OpType_value = map[string]int32{
	"Invalid":      0,
	"GreaterThan":  1,
	"GreaterEqual": 2,
	"LessThan":     3,
	"LessEqual":    4,
	"Equal":        5,
	"NotEqual":     6,
}

func (x RangeExpr_OpType) String() string {
	return proto.EnumName(RangeExpr_OpType_name, int32(x))
}

func (RangeExpr_OpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{2, 0}
}

type GenericValue struct {
	// Types that are valid to be assigned to Val:
	//	*GenericValue_BoolVal
	//	*GenericValue_Int64Val
	//	*GenericValue_FloatVal
	Val                  isGenericValue_Val `protobuf_oneof:"val"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GenericValue) Reset()         { *m = GenericValue{} }
func (m *GenericValue) String() string { return proto.CompactTextString(m) }
func (*GenericValue) ProtoMessage()    {}
func (*GenericValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{0}
}

func (m *GenericValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericValue.Unmarshal(m, b)
}
func (m *GenericValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericValue.Marshal(b, m, deterministic)
}
func (m *GenericValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericValue.Merge(m, src)
}
func (m *GenericValue) XXX_Size() int {
	return xxx_messageInfo_GenericValue.Size(m)
}
func (m *GenericValue) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericValue.DiscardUnknown(m)
}

var xxx_messageInfo_GenericValue proto.InternalMessageInfo

type isGenericValue_Val interface {
	isGenericValue_Val()
}

type GenericValue_BoolVal struct {
	BoolVal bool `protobuf:"varint,1,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

type GenericValue_Int64Val struct {
	Int64Val int64 `protobuf:"varint,2,opt,name=int64_val,json=int64Val,proto3,oneof"`
}

type GenericValue_FloatVal struct {
	FloatVal float64 `protobuf:"fixed64,3,opt,name=float_val,json=floatVal,proto3,oneof"`
}

func (*GenericValue_BoolVal) isGenericValue_Val() {}

func (*GenericValue_Int64Val) isGenericValue_Val() {}

func (*GenericValue_FloatVal) isGenericValue_Val() {}

func (m *GenericValue) GetVal() isGenericValue_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *GenericValue) GetBoolVal() bool {
	if x, ok := m.GetVal().(*GenericValue_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (m *GenericValue) GetInt64Val() int64 {
	if x, ok := m.GetVal().(*GenericValue_Int64Val); ok {
		return x.Int64Val
	}
	return 0
}

func (m *GenericValue) GetFloatVal() float64 {
	if x, ok := m.GetVal().(*GenericValue_FloatVal); ok {
		return x.FloatVal
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GenericValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GenericValue_BoolVal)(nil),
		(*GenericValue_Int64Val)(nil),
		(*GenericValue_FloatVal)(nil),
	}
}

type QueryInfo struct {
	Topk                 int64    `protobuf:"varint,1,opt,name=topk,proto3" json:"topk,omitempty"`
	FieldId              int64    `protobuf:"varint,2,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	MetricType           string   `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	SearchParams         string   `protobuf:"bytes,4,opt,name=search_params,json=searchParams,proto3" json:"search_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryInfo) Reset()         { *m = QueryInfo{} }
func (m *QueryInfo) String() string { return proto.CompactTextString(m) }
func (*QueryInfo) ProtoMessage()    {}
func (*QueryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{1}
}

func (m *QueryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryInfo.Unmarshal(m, b)
}
func (m *QueryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryInfo.Marshal(b, m, deterministic)
}
func (m *QueryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInfo.Merge(m, src)
}
func (m *QueryInfo) XXX_Size() int {
	return xxx_messageInfo_QueryInfo.Size(m)
}
func (m *QueryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueryInfo proto.InternalMessageInfo

func (m *QueryInfo) GetTopk() int64 {
	if m != nil {
		return m.Topk
	}
	return 0
}

func (m *QueryInfo) GetFieldId() int64 {
	if m != nil {
		return m.FieldId
	}
	return 0
}

func (m *QueryInfo) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *QueryInfo) GetSearchParams() string {
	if m != nil {
		return m.SearchParams
	}
	return ""
}

type RangeExpr struct {
	FieldId              int64              `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	DataType             schemapb.DataType  `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3,enum=milvus.proto.schema.DataType" json:"data_type,omitempty"`
	Ops                  []RangeExpr_OpType `protobuf:"varint,3,rep,packed,name=ops,proto3,enum=milvus.proto.plan.RangeExpr_OpType" json:"ops,omitempty"`
	Values               []*GenericValue    `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RangeExpr) Reset()         { *m = RangeExpr{} }
func (m *RangeExpr) String() string { return proto.CompactTextString(m) }
func (*RangeExpr) ProtoMessage()    {}
func (*RangeExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{2}
}

func (m *RangeExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeExpr.Unmarshal(m, b)
}
func (m *RangeExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeExpr.Marshal(b, m, deterministic)
}
func (m *RangeExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeExpr.Merge(m, src)
}
func (m *RangeExpr) XXX_Size() int {
	return xxx_messageInfo_RangeExpr.Size(m)
}
func (m *RangeExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeExpr.DiscardUnknown(m)
}

var xxx_messageInfo_RangeExpr proto.InternalMessageInfo

func (m *RangeExpr) GetFieldId() int64 {
	if m != nil {
		return m.FieldId
	}
	return 0
}

func (m *RangeExpr) GetDataType() schemapb.DataType {
	if m != nil {
		return m.DataType
	}
	return schemapb.DataType_None
}

func (m *RangeExpr) GetOps() []RangeExpr_OpType {
	if m != nil {
		return m.Ops
	}
	return nil
}

func (m *RangeExpr) GetValues() []*GenericValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type Expr struct {
	// Types that are valid to be assigned to Expr:
	//	*Expr_RangeExpr
	Expr                 isExpr_Expr `protobuf_oneof:"expr"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Expr) Reset()         { *m = Expr{} }
func (m *Expr) String() string { return proto.CompactTextString(m) }
func (*Expr) ProtoMessage()    {}
func (*Expr) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{3}
}

func (m *Expr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expr.Unmarshal(m, b)
}
func (m *Expr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expr.Marshal(b, m, deterministic)
}
func (m *Expr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expr.Merge(m, src)
}
func (m *Expr) XXX_Size() int {
	return xxx_messageInfo_Expr.Size(m)
}
func (m *Expr) XXX_DiscardUnknown() {
	xxx_messageInfo_Expr.DiscardUnknown(m)
}

var xxx_messageInfo_Expr proto.InternalMessageInfo

type isExpr_Expr interface {
	isExpr_Expr()
}

type Expr_RangeExpr struct {
	RangeExpr *RangeExpr `protobuf:"bytes,1,opt,name=range_expr,json=rangeExpr,proto3,oneof"`
}

func (*Expr_RangeExpr) isExpr_Expr() {}

func (m *Expr) GetExpr() isExpr_Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

func (m *Expr) GetRangeExpr() *RangeExpr {
	if x, ok := m.GetExpr().(*Expr_RangeExpr); ok {
		return x.RangeExpr
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Expr) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Expr_RangeExpr)(nil),
	}
}

type VectorANNS struct {
	IsBinary             bool       `protobuf:"varint,1,opt,name=is_binary,json=isBinary,proto3" json:"is_binary,omitempty"`
	Predicates           *Expr      `protobuf:"bytes,2,opt,name=predicates,proto3" json:"predicates,omitempty"`
	QueryInfo            *QueryInfo `protobuf:"bytes,3,opt,name=query_info,json=queryInfo,proto3" json:"query_info,omitempty"`
	PlaceholderTag       string     `protobuf:"bytes,4,opt,name=placeholder_tag,json=placeholderTag,proto3" json:"placeholder_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VectorANNS) Reset()         { *m = VectorANNS{} }
func (m *VectorANNS) String() string { return proto.CompactTextString(m) }
func (*VectorANNS) ProtoMessage()    {}
func (*VectorANNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{4}
}

func (m *VectorANNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorANNS.Unmarshal(m, b)
}
func (m *VectorANNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorANNS.Marshal(b, m, deterministic)
}
func (m *VectorANNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorANNS.Merge(m, src)
}
func (m *VectorANNS) XXX_Size() int {
	return xxx_messageInfo_VectorANNS.Size(m)
}
func (m *VectorANNS) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorANNS.DiscardUnknown(m)
}

var xxx_messageInfo_VectorANNS proto.InternalMessageInfo

func (m *VectorANNS) GetIsBinary() bool {
	if m != nil {
		return m.IsBinary
	}
	return false
}

func (m *VectorANNS) GetPredicates() *Expr {
	if m != nil {
		return m.Predicates
	}
	return nil
}

func (m *VectorANNS) GetQueryInfo() *QueryInfo {
	if m != nil {
		return m.QueryInfo
	}
	return nil
}

func (m *VectorANNS) GetPlaceholderTag() string {
	if m != nil {
		return m.PlaceholderTag
	}
	return ""
}

type PlanNode struct {
	// Types that are valid to be assigned to Node:
	//	*PlanNode_VectorAnns
	Node                 isPlanNode_Node `protobuf_oneof:"node"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PlanNode) Reset()         { *m = PlanNode{} }
func (m *PlanNode) String() string { return proto.CompactTextString(m) }
func (*PlanNode) ProtoMessage()    {}
func (*PlanNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d655ab2f7683c23, []int{5}
}

func (m *PlanNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanNode.Unmarshal(m, b)
}
func (m *PlanNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanNode.Marshal(b, m, deterministic)
}
func (m *PlanNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanNode.Merge(m, src)
}
func (m *PlanNode) XXX_Size() int {
	return xxx_messageInfo_PlanNode.Size(m)
}
func (m *PlanNode) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanNode.DiscardUnknown(m)
}

var xxx_messageInfo_PlanNode proto.InternalMessageInfo

type isPlanNode_Node interface {
	isPlanNode_Node()
}

type PlanNode_VectorAnns struct {
	VectorAnns *VectorANNS `protobuf:"bytes,1,opt,name=vector_anns,json=vectorAnns,proto3,oneof"`
}

func (*PlanNode_VectorAnns) isPlanNode_Node() {}

func (m *PlanNode) GetNode() isPlanNode_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *PlanNode) GetVectorAnns() *VectorANNS {
	if x, ok := m.GetNode().(*PlanNode_VectorAnns); ok {
		return x.VectorAnns
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PlanNode) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PlanNode_VectorAnns)(nil),
	}
}

func init() {
	proto.RegisterEnum("milvus.proto.plan.RangeExpr_OpType", RangeExpr_OpType_name, RangeExpr_OpType_value)
	proto.RegisterType((*GenericValue)(nil), "milvus.proto.plan.GenericValue")
	proto.RegisterType((*QueryInfo)(nil), "milvus.proto.plan.QueryInfo")
	proto.RegisterType((*RangeExpr)(nil), "milvus.proto.plan.RangeExpr")
	proto.RegisterType((*Expr)(nil), "milvus.proto.plan.Expr")
	proto.RegisterType((*VectorANNS)(nil), "milvus.proto.plan.VectorANNS")
	proto.RegisterType((*PlanNode)(nil), "milvus.proto.plan.PlanNode")
}

func init() { proto.RegisterFile("plan.proto", fileDescriptor_2d655ab2f7683c23) }

var fileDescriptor_2d655ab2f7683c23 = []byte{
	// 619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x6f, 0x1a, 0x3b,
	0x14, 0x65, 0x32, 0x84, 0xcc, 0x5c, 0x48, 0xc2, 0xf3, 0xe6, 0xe5, 0xbd, 0xbc, 0x28, 0x88, 0x2c,
	0x1e, 0x9b, 0x0e, 0x12, 0xfd, 0x88, 0xd4, 0xaa, 0x55, 0x82, 0x1a, 0x85, 0x48, 0x2d, 0x4d, 0xa7,
	0x88, 0x45, 0x37, 0xa3, 0xcb, 0x8c, 0x01, 0xab, 0xc6, 0x76, 0x3c, 0x06, 0x85, 0xac, 0xfa, 0xdb,
	0xba, 0xea, 0xcf, 0xaa, 0xec, 0x99, 0xa6, 0x89, 0x8a, 0xba, 0xf3, 0x39, 0xe7, 0x5e, 0x9f, 0xfb,
	0x05, 0xa0, 0x38, 0x8a, 0x48, 0x69, 0x69, 0x24, 0xf9, 0x6b, 0xc1, 0xf8, 0x6a, 0x99, 0x17, 0x28,
	0xb2, 0xc2, 0xbf, 0x8d, 0x3c, 0x9d, 0xd3, 0x05, 0x16, 0x54, 0x5b, 0x41, 0xe3, 0x92, 0x0a, 0xaa,
	0x59, 0x3a, 0x46, 0xbe, 0xa4, 0xe4, 0x10, 0x82, 0x89, 0x94, 0x3c, 0x59, 0x21, 0x3f, 0xf0, 0x5a,
	0x5e, 0x27, 0x18, 0x54, 0xe2, 0x1d, 0xcb, 0x8c, 0x91, 0x93, 0x23, 0x08, 0x99, 0x30, 0x2f, 0x9e,
	0x39, 0x75, 0xab, 0xe5, 0x75, 0xfc, 0x41, 0x25, 0x0e, 0x1c, 0x55, 0xca, 0x53, 0x2e, 0xd1, 0x38,
	0xd9, 0x6f, 0x79, 0x1d, 0xcf, 0xca, 0x8e, 0x1a, 0x23, 0xef, 0x6f, 0x83, 0xbf, 0x42, 0xde, 0xfe,
	0xea, 0x41, 0xf8, 0x71, 0x49, 0xf5, 0xfa, 0x4a, 0x4c, 0x25, 0x21, 0x50, 0x35, 0x52, 0x7d, 0x71,
	0x5e, 0x7e, 0xec, 0xde, 0xe4, 0x1f, 0x08, 0xa6, 0x8c, 0xf2, 0x2c, 0x61, 0x59, 0xe1, 0x12, 0xef,
	0x38, 0x7c, 0x95, 0x91, 0x63, 0xa8, 0x2f, 0xa8, 0xd1, 0x2c, 0x4d, 0xcc, 0x5a, 0x51, 0x67, 0x12,
	0xc6, 0x50, 0x50, 0xa3, 0xb5, 0xa2, 0xe4, 0x04, 0x76, 0x73, 0x8a, 0x3a, 0x9d, 0x27, 0x0a, 0x35,
	0x2e, 0xf2, 0x83, 0xaa, 0x0b, 0x69, 0x14, 0xe4, 0xb5, 0xe3, 0xda, 0xdf, 0xb6, 0x20, 0x8c, 0x51,
	0xcc, 0xe8, 0xc5, 0xad, 0xd2, 0x8f, 0xec, 0xbc, 0xc7, 0x76, 0x2f, 0x21, 0xcc, 0xd0, 0x60, 0x61,
	0x66, 0x4b, 0xd9, 0xeb, 0x1d, 0x45, 0x8f, 0x46, 0x5a, 0x0e, 0xf3, 0x2d, 0x1a, 0xb4, 0xfe, 0x71,
	0x90, 0x95, 0x2f, 0xf2, 0x1c, 0x7c, 0xa9, 0xf2, 0x03, 0xbf, 0xe5, 0x77, 0xf6, 0x7a, 0x27, 0xd1,
	0x6f, 0x8b, 0x88, 0xee, 0x2b, 0x88, 0x3e, 0x28, 0x97, 0x6b, 0xe3, 0xc9, 0x29, 0xd4, 0x56, 0x76,
	0x13, 0xb6, 0x72, 0xbf, 0x53, 0xef, 0x1d, 0x6f, 0xc8, 0x7c, 0xb8, 0xb1, 0xb8, 0x0c, 0x6f, 0x0b,
	0xa8, 0x15, 0xff, 0x90, 0x3a, 0xec, 0x5c, 0x89, 0x15, 0x72, 0x96, 0x35, 0x2b, 0x64, 0x1f, 0xea,
	0x97, 0x9a, 0xa2, 0xa1, 0x7a, 0x34, 0x47, 0xd1, 0xf4, 0x48, 0x13, 0x1a, 0x25, 0x71, 0x71, 0xb3,
	0x44, 0xde, 0xdc, 0x22, 0x0d, 0x08, 0xde, 0xd1, 0x3c, 0x77, 0xba, 0x4f, 0x76, 0x21, 0xb4, 0xa8,
	0x10, 0xab, 0x24, 0x84, 0xed, 0xe2, 0xb9, 0x6d, 0xe3, 0x86, 0xd2, 0x14, 0xa8, 0xd6, 0x7e, 0x0f,
	0x55, 0x37, 0xbe, 0xd7, 0x00, 0xda, 0x76, 0x92, 0xd0, 0x5b, 0xa5, 0xdd, 0x00, 0xeb, 0xbd, 0xff,
	0xfe, 0xd4, 0xee, 0xa0, 0x12, 0x87, 0xfa, 0x27, 0xe8, 0xd7, 0xa0, 0x6a, 0x13, 0xdb, 0xdf, 0x3d,
	0x80, 0x31, 0x4d, 0x8d, 0xd4, 0xe7, 0xc3, 0xe1, 0x27, 0x72, 0x08, 0x21, 0xcb, 0x93, 0x09, 0x13,
	0xa8, 0xd7, 0xc5, 0x21, 0xc6, 0x01, 0xcb, 0xfb, 0x0e, 0x93, 0x53, 0x00, 0xa5, 0x69, 0xc6, 0x52,
	0x34, 0x34, 0x77, 0x7b, 0xa9, 0xf7, 0xfe, 0xde, 0x60, 0x69, 0x0d, 0xe2, 0x07, 0xa1, 0xe4, 0x15,
	0xc0, 0x8d, 0x3d, 0xbd, 0x84, 0x89, 0xa9, 0x74, 0xd7, 0xb3, 0xb9, 0xd6, 0xfb, 0xfb, 0x8c, 0xc3,
	0x9b, 0xfb, 0x53, 0xfd, 0x1f, 0xf6, 0x15, 0xc7, 0x94, 0xce, 0x25, 0xcf, 0xa8, 0x4e, 0x0c, 0xce,
	0xca, 0xe3, 0xda, 0x7b, 0x40, 0x8f, 0x70, 0xd6, 0x1e, 0x41, 0x70, 0xcd, 0x51, 0x0c, 0x65, 0x46,
	0xc9, 0x19, 0xd4, 0x57, 0xae, 0xab, 0x04, 0x85, 0xc8, 0xcb, 0xf1, 0x1c, 0x6d, 0xb0, 0xfc, 0xd5,
	0xfb, 0xa0, 0x12, 0x43, 0x91, 0x73, 0x2e, 0x44, 0x6e, 0x07, 0x24, 0x64, 0x46, 0xfb, 0x67, 0x9f,
	0xdf, 0xcc, 0x98, 0x99, 0x2f, 0x27, 0x51, 0x2a, 0x17, 0xdd, 0x3b, 0xc6, 0x39, 0xbb, 0x33, 0x34,
	0x9d, 0x77, 0x8b, 0xbf, 0x9e, 0x64, 0x2c, 0x37, 0x9a, 0x4d, 0x96, 0x86, 0x66, 0x5d, 0x26, 0x0c,
	0xd5, 0x02, 0x79, 0xd7, 0x19, 0x74, 0xad, 0x81, 0x9a, 0x4c, 0x6a, 0x0e, 0x3d, 0xfd, 0x11, 0x00,
	0x00, 0xff, 0xff, 0x33, 0x02, 0x11, 0xad, 0x21, 0x04, 0x00, 0x00,
}
